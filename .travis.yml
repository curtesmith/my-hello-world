language: generic

# make use of vm's 
sudo: 'required'

# have the docker service set up (we'll
# update it later)
services:
  - 'docker'

env:
  # This environment variable tells Terraform not to prompt for input. This is
  # not required, but if we make a mistake, the Travis builder will hang waiting
  # for user input, tieing up unnecessary resources.
  - TF_INPUT=false

# prepare the machine before any code
# installation scripts
# before_install:
#   - './.travis/main.sh'
# Install terraform
before_install:
  - curl -sLo /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.13.5/terraform_0.13.5_linux_amd64.zip
  - unzip /tmp/terraform.zip -d /tmp
  # - mkdir ~/bin
  - mv /tmp/terraform ~/bin
  - export PATH="~/bin:$PATH"


jobs:
  include:
    - stage: build docker image
# first execute the test suite.
# after the test execution is done and didn't
# fail, build the images (if this step fails
# the whole Travis build is considered a failure).

      script:
      - docker build -t curtesmith/my-hello-world:latest .
      - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - docker push curtesmith/my-hello-world:latest
      
    - stage: create the infrastructure
      script:
      - ./deploy.sh


# only execute the following instructions in
# the case of a success (failing at this point
# won't mark the build as a failure).
# To have `DOCKER_USERNAME` and `DOCKER_PASSWORD`
# after_success:

# don't notify me when things fail
notifications:
  email: false
